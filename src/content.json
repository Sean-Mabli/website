[
  {
    "title": "aiinpy.texttobinary",
    "model": "aiinpy.texttobinary()",
    "url": "/0.0.17/texttobinary",
    "id": "texttobinary",
    "version": "0.0.17"
  },
  {
    "title": "aiinpy.tanh",
    "model": "aiinpy.tanh()",
    "url": "/0.0.17/tanh",
    "id": "tanh",
    "version": "0.0.17"
  },
  {
    "title": "aiinpy.stablesoftmax",
    "model": "aiinpy.stablesoftmax()",
    "url": "/0.0.17/stablesoftmax",
    "id": "stablesoftmax",
    "version": "0.0.17"
  },
  {
    "title": "aiinpy.softplus",
    "model": "aiinpy.softplus()",
    "url": "/0.0.17/softplus",
    "id": "softplus",
    "version": "0.0.17"
  },
  {
    "title": "aiinpy.softmax",
    "model": "aiinpy.softmax()",
    "url": "/0.0.17/softmax",
    "id": "softmax",
    "version": "0.0.17"
  },
  {
    "title": "aiinpy.silu",
    "model": "aiinpy.silu()",
    "url": "/0.0.17/silu",
    "id": "silu",
    "version": "0.0.17"
  },
  {
    "title": "aiinpy.sigmoid",
    "model": "aiinpy.sigmoid()",
    "url": "/0.0.17/sigmoid",
    "id": "sigmoid",
    "version": "0.0.17"
  },
  {
    "title": "aiinpy.selu",
    "model": "aiinpy.selu()",
    "url": "/0.0.17/selu",
    "id": "selu",
    "version": "0.0.17"
  },
  {
    "title": "aiinpy.rnn",
    "model": "aiinpy.rnn(self, outshape, Type, outactivation=stablesoftmax(), hidshape=64, learningrate=0.05, inshape=None)",
    "url": "/0.0.17/rnn",
    "id": "rnn",
    "version": "0.0.17"
  },
  {
    "title": "aiinpy.relu",
    "model": "aiinpy.relu()",
    "url": "/0.0.17/relu",
    "id": "relu",
    "version": "0.0.17"
  },
  {
    "title": "aiinpy.pool",
    "model": "aiinpy.pool(self, stride, filtershape, opperation, inshape=None)",
    "url": "/0.0.17/pool",
    "id": "pool",
    "version": "0.0.17"
  },
  {
    "title": "aiinpy.nn",
    "model": "aiinpy.nn(self, outshape, activation, learningrate, weightsinit=(-1, 1), biasesinit=(0, 0), inshape=None)",
    "url": "/0.0.17/nn",
    "id": "nn",
    "version": "0.0.17"
  },
  {
    "title": "aiinpy.neuroevolution",
    "model": "aiinpy.neuroevolution(self, inshape, outshape, PopulationSize, model)",
    "url": "/0.0.17/neuroevolution",
    "id": "neuroevolution",
    "version": "0.0.17"
  },
  {
    "title": "aiinpy.model",
    "model": "aiinpy.model(self, inshape, outshape, model)",
    "url": "/0.0.17/model",
    "id": "model",
    "version": "0.0.17"
  },
  {
    "title": "aiinpy.mish",
    "model": "aiinpy.mish()",
    "url": "/0.0.17/mish",
    "id": "mish",
    "version": "0.0.17"
  },
  {
    "title": "aiinpy.lstm",
    "model": "aiinpy.lstm(self, outshape, outactivation, hidshape=64, learningrate=0.05, inshape=None)",
    "url": "/0.0.17/lstm",
    "id": "lstm",
    "version": "0.0.17"
  },
  {
    "title": "aiinpy.leakyrelu",
    "model": "aiinpy.leakyrelu(self, alpha=0.01)",
    "url": "/0.0.17/leakyrelu",
    "id": "leakyrelu",
    "version": "0.0.17"
  },
  {
    "title": "aiinpy.identity",
    "model": "aiinpy.identity()",
    "url": "/0.0.17/identity",
    "id": "identity",
    "version": "0.0.17"
  },
  {
    "title": "aiinpy.gru",
    "model": "aiinpy.gru(self, outshape, outactivation, hidshape=64, learningrate=0.05, inshape=None)",
    "url": "/0.0.17/gru",
    "id": "gru",
    "version": "0.0.17"
  },
  {
    "title": "aiinpy.gaussian",
    "model": "aiinpy.gaussian()",
    "url": "/0.0.17/gaussian",
    "id": "gaussian",
    "version": "0.0.17"
  },
  {
    "title": "aiinpy.dropout",
    "model": "aiinpy.dropout(self, dropoutrate)",
    "url": "/0.0.17/dropout",
    "id": "dropout",
    "version": "0.0.17"
  },
  {
    "title": "aiinpy.conv",
    "model": "aiinpy.conv(self, filtershape, learningrate, activation=identity, padding=False, stride=(1, 1), inshape=None)",
    "url": "/0.0.17/conv",
    "id": "conv",
    "version": "0.0.17"
  },
  {
    "title": "aiinpy.binarystep",
    "model": "aiinpy.binarystep()",
    "url": "/0.0.17/binarystep",
    "id": "binarystep",
    "version": "0.0.17"
  },
  {
    "title": "aiinpy.rnn",
    "model": "aiinpy.rnn(self, InSize, OutSize, Type, OutActivation='StableSoftmax', HidSize=64, LearningRate=0.05)",
    "url": "/0.0.16/rnn",
    "id": "rnn",
    "version": "0.0.16"
  },
  {
    "title": "aiinpy.pool",
    "model": "aiinpy.pool(self, Stride, FilterShape, Type)",
    "url": "/0.0.16/pool",
    "id": "pool",
    "version": "0.0.16"
  },
  {
    "title": "aiinpy.nn",
    "model": "aiinpy.nn(self, InShape, OutShape, Activation, LearningRate, WeightsInit=(-1, 1), BiasesInit=(0, 0), DropoutRate=0)",
    "url": "/0.0.16/nn",
    "id": "nn",
    "version": "0.0.16"
  },
  {
    "title": "aiinpy.neuroevolution",
    "model": "aiinpy.neuroevolution(self, InSize, OutSize, MutationRate, PopulationSize, Activation)",
    "url": "/0.0.16/neuroevolution",
    "id": "neuroevolution",
    "version": "0.0.16"
  },
  {
    "title": "aiinpy.model",
    "model": "aiinpy.model(self, InShape, OutShape, Model)",
    "url": "/0.0.16/model",
    "id": "model",
    "version": "0.0.16"
  },
  {
    "title": "aiinpy.lstm",
    "model": "aiinpy.lstm(self, InSize, OutSize, OutActivation, HidSize=64, LearningRate=0.05)",
    "url": "/0.0.16/lstm",
    "id": "lstm",
    "version": "0.0.16"
  },
  {
    "title": "aiinpy.dropout",
    "model": "aiinpy.dropout(self, DropoutRate)",
    "url": "/0.0.16/dropout",
    "id": "dropout",
    "version": "0.0.16"
  },
  {
    "title": "aiinpy.conv",
    "model": "aiinpy.conv(self, InShape, FilterShape, LearningRate, Activation='None', Padding=False, Stride=(1, 1))",
    "url": "/0.0.16/conv",
    "id": "conv",
    "version": "0.0.16"
  },
  {
    "title": "aiinpy.Tanh",
    "model": "aiinpy.Tanh()",
    "url": "/0.0.16/Tanh",
    "id": "Tanh",
    "version": "0.0.16"
  },
  {
    "title": "aiinpy.StableSoftmax",
    "model": "aiinpy.StableSoftmax()",
    "url": "/0.0.16/StableSoftmax",
    "id": "StableSoftmax",
    "version": "0.0.16"
  },
  {
    "title": "aiinpy.Softplus",
    "model": "aiinpy.Softplus()",
    "url": "/0.0.16/Softplus",
    "id": "Softplus",
    "version": "0.0.16"
  },
  {
    "title": "aiinpy.Softmax",
    "model": "aiinpy.Softmax()",
    "url": "/0.0.16/Softmax",
    "id": "Softmax",
    "version": "0.0.16"
  },
  {
    "title": "aiinpy.Sigmoid",
    "model": "aiinpy.Sigmoid()",
    "url": "/0.0.16/Sigmoid",
    "id": "Sigmoid",
    "version": "0.0.16"
  },
  {
    "title": "aiinpy.SiLU",
    "model": "aiinpy.SiLU()",
    "url": "/0.0.16/SiLU",
    "id": "SiLU",
    "version": "0.0.16"
  },
  {
    "title": "aiinpy.SELU",
    "model": "aiinpy.SELU()",
    "url": "/0.0.16/SELU",
    "id": "SELU",
    "version": "0.0.16"
  },
  {
    "title": "aiinpy.ReLU",
    "model": "aiinpy.ReLU()",
    "url": "/0.0.16/ReLU",
    "id": "ReLU",
    "version": "0.0.16"
  },
  {
    "title": "aiinpy.Mish",
    "model": "aiinpy.Mish()",
    "url": "/0.0.16/Mish",
    "id": "Mish",
    "version": "0.0.16"
  },
  {
    "title": "aiinpy.LeakyReLU",
    "model": "aiinpy.LeakyReLU()",
    "url": "/0.0.16/LeakyReLU",
    "id": "LeakyReLU",
    "version": "0.0.16"
  },
  {
    "title": "aiinpy.Identity",
    "model": "aiinpy.Identity()",
    "url": "/0.0.16/Identity",
    "id": "Identity",
    "version": "0.0.16"
  },
  {
    "title": "aiinpy.Gaussian",
    "model": "aiinpy.Gaussian()",
    "url": "/0.0.16/Gaussian",
    "id": "Gaussian",
    "version": "0.0.16"
  },
  {
    "title": "aiinpy.BinaryStep",
    "model": "aiinpy.BinaryStep()",
    "url": "/0.0.16/BinaryStep",
    "id": "BinaryStep",
    "version": "0.0.16"
  },
  {
    "title": "aiinpy.Tanh",
    "model": "aiinpy.Tanh()",
    "url": "/0.0.15/Tanh",
    "id": "Tanh",
    "version": "0.0.15"
  },
  {
    "title": "aiinpy.StableSoftmax",
    "model": "aiinpy.StableSoftmax()",
    "url": "/0.0.15/StableSoftmax",
    "id": "StableSoftmax",
    "version": "0.0.15"
  },
  {
    "title": "aiinpy.Softplus",
    "model": "aiinpy.Softplus()",
    "url": "/0.0.15/Softplus",
    "id": "Softplus",
    "version": "0.0.15"
  },
  {
    "title": "aiinpy.Softmax",
    "model": "aiinpy.Softmax()",
    "url": "/0.0.15/Softmax",
    "id": "Softmax",
    "version": "0.0.15"
  },
  {
    "title": "aiinpy.Sigmoid",
    "model": "aiinpy.Sigmoid()",
    "url": "/0.0.15/Sigmoid",
    "id": "Sigmoid",
    "version": "0.0.15"
  },
  {
    "title": "aiinpy.SiLU",
    "model": "aiinpy.SiLU()",
    "url": "/0.0.15/SiLU",
    "id": "SiLU",
    "version": "0.0.15"
  },
  {
    "title": "aiinpy.SELU",
    "model": "aiinpy.SELU()",
    "url": "/0.0.15/SELU",
    "id": "SELU",
    "version": "0.0.15"
  },
  {
    "title": "aiinpy.ReLU",
    "model": "aiinpy.ReLU()",
    "url": "/0.0.15/ReLU",
    "id": "ReLU",
    "version": "0.0.15"
  },
  {
    "title": "aiinpy.RNN",
    "model": "aiinpy.RNN(self, InputSize, OutputSize, HidSize=64, LearningRate=0.05)",
    "url": "/0.0.15/RNN",
    "id": "RNN",
    "version": "0.0.15"
  },
  {
    "title": "aiinpy.POOL",
    "model": "aiinpy.POOL(self, Stride, PoolShape)",
    "url": "/0.0.15/POOL",
    "id": "POOL",
    "version": "0.0.15"
  },
  {
    "title": "aiinpy.NeuroEvolution",
    "model": "aiinpy.NeuroEvolution(self, InSize, OutSize, MutationRate, PopulationSize, Activation)",
    "url": "/0.0.15/NeuroEvolution",
    "id": "NeuroEvolution",
    "version": "0.0.15"
  },
  {
    "title": "aiinpy.NN",
    "model": "aiinpy.NN(self, InSize, OutSize, Activation, LearningRate, WeightsInit=(-1, 1), BiasesInit=(0, 0), DropoutRate=0)",
    "url": "/0.0.15/NN",
    "id": "NN",
    "version": "0.0.15"
  },
  {
    "title": "aiinpy.Mish",
    "model": "aiinpy.Mish()",
    "url": "/0.0.15/Mish",
    "id": "Mish",
    "version": "0.0.15"
  },
  {
    "title": "aiinpy.LeakyReLU",
    "model": "aiinpy.LeakyReLU()",
    "url": "/0.0.15/LeakyReLU",
    "id": "LeakyReLU",
    "version": "0.0.15"
  },
  {
    "title": "aiinpy.Identity",
    "model": "aiinpy.Identity()",
    "url": "/0.0.15/Identity",
    "id": "Identity",
    "version": "0.0.15"
  },
  {
    "title": "aiinpy.Gaussian",
    "model": "aiinpy.Gaussian()",
    "url": "/0.0.15/Gaussian",
    "id": "Gaussian",
    "version": "0.0.15"
  },
  {
    "title": "aiinpy.CONV",
    "model": "aiinpy.CONV(self, FilterShape, LearningRate, Activation='None', Padding=False, Stride=(1, 1), DropoutRate=0)",
    "url": "/0.0.15/CONV",
    "id": "CONV",
    "version": "0.0.15"
  },
  {
    "title": "aiinpy.BinaryStep",
    "model": "aiinpy.BinaryStep()",
    "url": "/0.0.15/BinaryStep",
    "id": "BinaryStep",
    "version": "0.0.15"
  },
  {
    "title": "aiinpy.Tanh",
    "model": "aiinpy.Tanh()",
    "url": "/0.0.13/Tanh",
    "id": "Tanh",
    "version": "0.0.13"
  },
  {
    "title": "aiinpy.StableSoftMax",
    "model": "aiinpy.StableSoftMax()",
    "url": "/0.0.13/StableSoftMax",
    "id": "StableSoftMax",
    "version": "0.0.13"
  },
  {
    "title": "aiinpy.Sigmoid",
    "model": "aiinpy.Sigmoid()",
    "url": "/0.0.13/Sigmoid",
    "id": "Sigmoid",
    "version": "0.0.13"
  },
  {
    "title": "aiinpy.ReLU",
    "model": "aiinpy.ReLU()",
    "url": "/0.0.13/ReLU",
    "id": "ReLU",
    "version": "0.0.13"
  },
  {
    "title": "aiinpy.RNN",
    "model": "aiinpy.RNN(self, InputSize, OutputSize, Type, HiddenSize=64, LearningRate=0.05)",
    "url": "/0.0.13/RNN",
    "id": "RNN",
    "version": "0.0.13"
  },
  {
    "title": "aiinpy.POOL",
    "model": "aiinpy.POOL(self, Stride)",
    "url": "/0.0.13/POOL",
    "id": "POOL",
    "version": "0.0.13"
  },
  {
    "title": "aiinpy.NN",
    "model": "aiinpy.NN(self, InputSize, OutputSize, Activation, LearningRate, WeightsInit=(-1, 1), BiasesInit=(0, 0), DropoutRate=0)",
    "url": "/0.0.13/NN",
    "id": "NN",
    "version": "0.0.13"
  },
  {
    "title": "aiinpy.LeakyReLU",
    "model": "aiinpy.LeakyReLU()",
    "url": "/0.0.13/LeakyReLU",
    "id": "LeakyReLU",
    "version": "0.0.13"
  },
  {
    "title": "aiinpy.CONV",
    "model": "aiinpy.CONV(self, FilterShape, LearningRate, Activation='None', Padding='None', Stride=(1, 1), DropoutRate=0)",
    "url": "/0.0.13/CONV",
    "id": "CONV",
    "version": "0.0.13"
  },
  {
    "title": "aiinpy.Tanh",
    "model": "aiinpy.Tanh(Input)",
    "url": "/0.0.11/Tanh",
    "id": "Tanh",
    "version": "0.0.11"
  },
  {
    "title": "aiinpy.StableSoftMax",
    "model": "aiinpy.StableSoftMax(Input)",
    "url": "/0.0.11/StableSoftMax",
    "id": "StableSoftMax",
    "version": "0.0.11"
  },
  {
    "title": "aiinpy.Sigmoid",
    "model": "aiinpy.Sigmoid(self, Input)",
    "url": "/0.0.11/Sigmoid",
    "id": "Sigmoid",
    "version": "0.0.11"
  },
  {
    "title": "aiinpy.ReLU",
    "model": "aiinpy.ReLU(Input)",
    "url": "/0.0.11/ReLU",
    "id": "ReLU",
    "version": "0.0.11"
  },
  {
    "title": "aiinpy.RNN",
    "model": "aiinpy.RNN(self, InputSize, OutputSize, Type, HiddenSize=64, LearningRate=0.05)",
    "url": "/0.0.11/RNN",
    "id": "RNN",
    "version": "0.0.11"
  },
  {
    "title": "aiinpy.POOL",
    "model": "aiinpy.POOL(self, Stride)",
    "url": "/0.0.11/POOL",
    "id": "POOL",
    "version": "0.0.11"
  },
  {
    "title": "aiinpy.NN",
    "model": "aiinpy.NN(self, InputSize, OutputSize, Activation, LearningRate, WeightsInit=(-1, 1), BiasesInit=(0, 0))",
    "url": "/0.0.11/NN",
    "id": "NN",
    "version": "0.0.11"
  },
  {
    "title": "aiinpy.LeakyReLU",
    "model": "aiinpy.LeakyReLU(Input)",
    "url": "/0.0.11/LeakyReLU",
    "id": "LeakyReLU",
    "version": "0.0.11"
  },
  {
    "title": "aiinpy.CONV",
    "model": "aiinpy.CONV(self, FilterShape, LearningRate, Padding='None', Stride=(1, 1))",
    "url": "/0.0.11/CONV",
    "id": "CONV",
    "version": "0.0.11"
  },
  {
    "title": "aiinpy.RNN",
    "model": "aiinpy.RNN(self, InputSize, OutputSize, Type, HiddenSize=64, LearningRate=0.05)",
    "url": "/0.0.10/RNN",
    "id": "RNN",
    "version": "0.0.10"
  },
  {
    "title": "aiinpy.POOL",
    "model": "aiinpy.POOL(self, Stride)",
    "url": "/0.0.10/POOL",
    "id": "POOL",
    "version": "0.0.10"
  },
  {
    "title": "aiinpy.NN",
    "model": "aiinpy.NN(self, InputSize, OutputSize, Activation, LearningRate, WeightsInit=(-1, 1), BiasesInit=(0, 0))",
    "url": "/0.0.10/NN",
    "id": "NN",
    "version": "0.0.10"
  },
  {
    "title": "aiinpy.CONV",
    "model": "aiinpy.CONV(self, FilterShape, LearningRate, Padding='None', Stride=(1, 1))",
    "url": "/0.0.10/CONV",
    "id": "CONV",
    "version": "0.0.10"
  },
  {
    "title": "aiinpy.RNN",
    "model": "aiinpy.RNN(self, InputSize, OutputSize, Type, HiddenSize=64, LearningRate=0.05)",
    "url": "/0.0.7/RNN",
    "id": "RNN",
    "version": "0.0.7"
  },
  {
    "title": "aiinpy.POOL",
    "model": "aiinpy.POOL(self, Stride)",
    "url": "/0.0.7/POOL",
    "id": "POOL",
    "version": "0.0.7"
  },
  {
    "title": "aiinpy.NN",
    "model": "aiinpy.NN(self, CurrentLayerShape, FollowingLayerShape, Activation, LearningRate, WeightsInit=(-1, 1), BiasesInit=(0, 0))",
    "url": "/0.0.7/NN",
    "id": "NN",
    "version": "0.0.7"
  },
  {
    "title": "aiinpy.CONV",
    "model": "aiinpy.CONV(self, FilterShape, LearningRate)",
    "url": "/0.0.7/CONV",
    "id": "CONV",
    "version": "0.0.7"
  },
  {
    "title": "aiinpy.POOL",
    "model": "aiinpy.POOL(self, Stride)",
    "url": "/0.0.3/POOL",
    "id": "POOL",
    "version": "0.0.3"
  },
  {
    "title": "aiinpy.NN",
    "model": "aiinpy.NN(self, CurrentLayerShape, FollowingLayerShape, Activation, LearningRate, WeightsInit=(-1, 1), BiasesInit=(0, 0))",
    "url": "/0.0.3/NN",
    "id": "NN",
    "version": "0.0.3"
  },
  {
    "title": "aiinpy.CONV",
    "model": "aiinpy.CONV(self, FilterShape, LearningRate)",
    "url": "/0.0.3/CONV",
    "id": "CONV",
    "version": "0.0.3"
  },
  {
    "title": "aiinpy.POOL",
    "model": "aiinpy.POOL(self, Stride)",
    "url": "/0.0.2/POOL",
    "id": "POOL",
    "version": "0.0.2"
  },
  {
    "title": "aiinpy.NN",
    "model": "aiinpy.NN(self, CurrentLayerShape, FollowingLayerShape, Activation, LearningRate, WeightsInit=(-1, 1))",
    "url": "/0.0.2/NN",
    "id": "NN",
    "version": "0.0.2"
  },
  {
    "title": "aiinpy.CONV",
    "model": "aiinpy.CONV(self, FilterShape, LearningRate)",
    "url": "/0.0.2/CONV",
    "id": "CONV",
    "version": "0.0.2"
  }
]